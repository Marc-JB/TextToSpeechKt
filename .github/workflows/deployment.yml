name: Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release'
        required: true
        type: 'string'
      create_tag:
        description: 'Create a tag'
        required: true
        default: true
        type: 'boolean'

concurrency:
  group: deployment-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-and-deploy-lib:
    runs-on: ubuntu-latest
    timeout-minutes: 16
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update version
        run: sed -i 's/tts[[:space:]]*=[[:space:]]*"[^"]*"/tts = "${{ github.event.inputs.version }}"/g' ./gradle/libs.versions.toml

      - name: Build & Deploy with Gradle
        run: ./gradlew :tts:publish :tts-compose:publish
        env:
          GPR_USER: github-actions
          GPR_KEY: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}

      - name: Upload library artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TextToSpeechKt.Libs
          path: |
            ./tts/build/outputs/aar/tts-*.aar
            ./tts/build/libs/tts-*.klib
            ./tts/build/libs/tts-*.jar
            ./tts-compose/build/outputs/aar/tts-compose-*.aar
            ./tts-compose/build/libs/tts-compose-*.klib
            ./tts-compose/build/libs/tts-compose-*.jar

  deploy-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    needs: build-and-deploy-lib
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update version
        run: sed -i 's/tts[[:space:]]*=[[:space:]]*"[^"]*"/tts = "${{ github.event.inputs.version }}"/g' ./gradle/libs.versions.toml

      - name: Copy docs of previous versions
        uses: actions/checkout@v4
        with:
          ref: 'dokka-version-archive'
          path: './build/dokka/html_version_archive/'

      - name: Generate docs with Gradle & Dokka
        run: ./gradlew :dokkaHtmlMultiModule

      - name: Move docs
        run: |
          mkdir out
          mv ./build/dokka/html/* ./out

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: TextToSpeechKt.Docs
          path: ./out/*
          if-no-files-found: error

      - name: Deploy Dokka archive
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: dokka-version-archive
          build_dir: ./build/dokka/html_version_archive/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: ./out/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-lib, deploy-docs]
    timeout-minutes: 8
    if: ${{ github.event.inputs.create_tag == 'true' }}
    steps:

      - name: Create tmp directory
        run: |
          mkdir out
          mkdir out/libs
          mkdir out/docs
  
      - name: Download library artifacts
        uses: actions/download-artifact@v4
        with:
          name: TextToSpeechKt.Libs
          path: ./out/libs/
  
      - name: Download docs
        uses: actions/download-artifact@v4
        with:
          name: TextToSpeechKt.Docs
          path: ./out/docs/

      - name: Zip archives
        run: |
          cd ./out/libs
          zip -r ../../TextToSpeechKt.Libs.zip ./
          cd ../docs
          zip -r ../../TextToSpeechKt.Docs.zip ./
          cd ../../
  
      - name: Create tag
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            Release version ${{ github.event.inputs.version }}
          draft: true
          commit: ${{ github.sha }}
          artifacts: |
            TextToSpeechKt.Libs.zip
            TextToSpeechKt.Docs.zip
