name: Gradle deployment

on:
  push:
    branches: [ main, snapshots ]
  workflow_dispatch:

concurrency:
  group: gradle-deployment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy-lib:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      # Permissions for Gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build & Deploy
      - name: Build & Deploy with Gradle
        run: ./gradlew :tts:publish :tts-compose:publish
        env:
          GPR_USER: github-actions
          GPR_KEY: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: TextToSpeechKt (Libs)
          path: |
            ./tts/build/outputs/aar/tts-*.aar
            ./tts/build/libs/tts-*.klib
            ./tts/build/libs/tts-*.jar
            ./tts-compose/build/outputs/aar/tts-compose-*.aar
            ./tts-compose/build/libs/tts-compose-*.klib
            ./tts-compose/build/libs/tts-compose-*.jar

  deploy-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    needs: build-and-deploy-lib
    steps:

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      # Permissions for Gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Use Kotlin/Wasm target
      - name: Use Kotlin/Wasm target
        run: sed -i 's/^\(tts = ".*\)"$/\1-wasm0"/' ./gradle/libs.versions.toml

      # Copy previous versions
      - name: Copy docs of previous versions
        uses: actions/checkout@v4
        with:
          ref: 'dokka-version-archive'
          path: './build/dokka/html_version_archive/'

      # Generate docs
      - name: Generate docs with Gradle & Dokka
        run: ./gradlew :dokkaHtmlMultiModule

      # Move docs
      - name: Move docs
        run: |
          mkdir out
          mv ./build/dokka/html/* ./out

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: TextToSpeechKt (Docs)
          path: ./out/*
          if-no-files-found: error

      # Deploy Dokka archive
      - name: Deploy Dokka archive
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: dokka-version-archive
          build_dir: ./build/dokka/html_version_archive/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: ./out/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
